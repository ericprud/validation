PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
BASE <http://hl7.org/fhir/shape/>


start=@<Group> AND {fhir:nodeRole [fhir:treeRoot]}


# Group of multiple entities
<Group> EXTENDS @<DomainResource> CLOSED {   

    a [fhir:Group];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:identifier @<OneOrMore_Identifier>?;  # Unique id
    fhir:active @<boolean>?;                # Whether this group's record is in 
                                            # active use 
    fhir:type @<code> AND
    	{fhir:value @fhirvs:group-type};  # person | animal | practitioner | 
                                            # device | medication | substance 
    fhir:actual @<boolean>;                 # Descriptive or actual
    fhir:code @<CodeableConcept>?;          # Kind of Group members
    fhir:name @<string>?;                   # Label for Group
    fhir:description @<markdown>?;          # Natural language description of 
                                            # the group 
    fhir:quantity @<unsignedInt>?;          # Number of members
    fhir:managingEntity @<Reference> AND {fhir:link 
    			@<Organization> OR 
    			@<Practitioner> OR 
    			@<PractitionerRole> OR 
    			@<RelatedPerson> }?;  # Entity that is the custodian of 
                                            # the Group's definition 
    fhir:characteristic @<OneOrMore_BackboneElement>?;  # Include / Exclude group members by 
                                            # Trait 
    fhir:member @<OneOrMore_BackboneElement>?;  # Who or what is in group
} AND (

# Constraint UniqueKey:grp-1
# Human readable:Can only have members if group is "actual"

# Constraint: member.empty() or (actual = true)
# ShEx:

 NOT { fhir:member {fhir:v .} }  OR ({ fhir:actual { fhir:v [true] }  })

)
 

# Include / Exclude group members by Trait
<Group.characteristic> EXTENDS @<BackboneElement> CLOSED {   
    fhir:code @<CodeableConcept>;           # Kind of characteristic
    fhir:value (@<CodeableConcept>  OR 
    			@<boolean>  OR 
    			@<Quantity>  OR 
    			@<Range>  OR 
    			@<Reference> )  AND { rdf:type IRI } ;  # Value held by characteristic
    fhir:exclude @<boolean>;                # Group includes or excludes
    fhir:period @<Period>?;                 # Period over which characteristic 
                                            # is tested 
}  

# Who or what is in group
<Group.member> EXTENDS @<BackboneElement> CLOSED {   
    fhir:entity @<Reference> AND {fhir:link 
    			@<Device> OR 
    			@<Group> OR 
    			@<Patient> OR 
    			@<Practitioner> OR 
    			@<PractitionerRole> OR 
    			@<RelatedPerson> OR 
    			@<Specimen> };  # Reference to the group member
    fhir:period @<Period>?;                 # Period member belonged to the group
    fhir:inactive @<boolean>?;              # If member is no longer in group
}  

#---------------------- Cardinality Types (OneOrMore) -------------------

<OneOrMore_Identifier> CLOSED {
    rdf:first @<Identifier>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Identifier> 
}

<OneOrMore_BackboneElement> CLOSED {
    rdf:first @<BackboneElement>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_BackboneElement> 
}

#---------------------- Value Sets ------------------------

# Types of resources that are part of group.
fhirvs:group-type ["person" "animal" "practitioner" "device" "medication" "substance"]
