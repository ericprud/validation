PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
BASE <http://hl7.org/fhir/shape/>


start=@<Questionnaire> AND {fhir:nodeRole [fhir:treeRoot]}


# A structured set of questions
<Questionnaire> EXTENDS @<MetadataResource> CLOSED {   

    a [fhir:Questionnaire];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:url @<uri>?;                       # Canonical identifier for this 
                                            # questionnaire, represented as a 
                                            # URI (globally unique) 
    fhir:identifier @<OneOrMore_Identifier>?;  # Additional identifier for the 
                                            # questionnaire 
    fhir:version @<string>?;                # Business version of the 
                                            # questionnaire 
    fhir:name @<string>?;                   # Name for this questionnaire 
                                            # (computer friendly) 
    fhir:title @<string>?;                  # Name for this questionnaire (human 
                                            # friendly) 
    fhir:derivedFrom @<OneOrMore_canonical>?;  # Instantiates protocol or definition
    fhir:status @<code> AND
    	{fhir:value @fhirvs:publication-status};  # draft | active | retired | unknown
    fhir:experimental @<boolean>?;          # For testing purposes, not real 
                                            # usage 
    fhir:subjectType @<OneOrMore_code> AND
    	{fhir:value @fhirvs:resource-types}?;  # Resource that can be subject of 
                                            # QuestionnaireResponse 
    fhir:date @<dateTime>?;                 # Date last formally published
    fhir:publisher @<string>?;              # Name of the publisher 
                                            # (organization or individual) 
    fhir:contact @<OneOrMore_ContactDetail>?;  # Contact details for the publisher
    fhir:description @<markdown>?;          # Natural language description of 
                                            # the questionnaire 
    fhir:useContext @<OneOrMore_UsageContext>?;  # The context that the content is 
                                            # intended to support 
    fhir:jurisdiction @<OneOrMore_CodeableConcept>?;  # Intended jurisdiction for 
                                            # questionnaire (if applicable) 
    fhir:purpose @<markdown>?;              # Why this questionnaire is defined
    fhir:copyright @<markdown>?;            # Use and/or publishing restrictions
    fhir:approvalDate @<date>?;             # When the questionnaire was 
                                            # approved by publisher 
    fhir:lastReviewDate @<date>?;           # When the questionnaire was last 
                                            # reviewed 
    fhir:effectivePeriod @<Period>?;        # When the questionnaire is expected 
                                            # to be used 
    fhir:code @<OneOrMore_Coding>?;         # Concept that represents the 
                                            # overall questionnaire 
    fhir:item @<OneOrMore_BackboneElement>?;  # Questions and sections within the 
                                            # Questionnaire 
} AND (

# Constraint UniqueKey:cnl-0
# Human readable:Name should be usable as an identifier for the module by machine processing applications such as code generation

# Constraint: name.exists() implies name.matches('[A-Z]([A-Za-z0-9_]){0,254}')
# ShEx:

{fhir:name . AND {fhir:name { fhir:v /'[A-Z]([A-Za-z0-9_]){0,254}'/ } }}

) AND (


# This constraint does not have mapping to a ShEx construct yet.
# Unmapped construct found: isDistinct
# Unmapped construct found: descendants
# # Constraint UniqueKey:que-2
# Human readable:The link ids for groups and questions must be unique within the questionnaire
#
# Constraint: descendants().linkId.isDistinct()
# ShEx:
#
#   isDistinct  (    descendants  (  ).linkId )
{}

) AND (

# Constraint UniqueKey:que-9
# Human readable:Read-only can't be specified for "display" items

# Constraint: type!='display' or readOnly.empty()
# ShEx:

({ fhir:type [fhir:v  . -'display']  }) OR  NOT { fhir:readOnly {fhir:v .} } 

) AND (

# Constraint UniqueKey:que-8
# Human readable:Initial values can't be specified for groups or display items

# Constraint: (type!='group' and type!='display') or initial.empty()
# ShEx:

(({ fhir:type [fhir:v  . -'group']  }) AND ({ fhir:type [fhir:v  . -'display']  })) OR  NOT { fhir:initial {fhir:v .} } 

) AND (

# Constraint UniqueKey:que-6
# Human readable:Required and repeat aren't permitted for display items

# Constraint: type!='display' or (required.empty() and repeats.empty())
# ShEx:

({ fhir:type [fhir:v  . -'display']  }) OR ( NOT { fhir:required {fhir:v .} }  AND  NOT { fhir:repeats {fhir:v .} } )

) AND (

# Constraint UniqueKey:que-5
# Human readable:Only coding, decimal, integer, date, dateTime, time, string or quantity  items can have answerOption or answerValueSet

# Constraint: (type='coding' or type = 'decimal' or type = 'integer' or type = 'date' or type = 'dateTime' or type = 'time' or type = 'string' or type = 'quantity') or (answerValueSet.empty() and answerOption.empty())
# ShEx:

(({ fhir:type { fhir:v ['coding'] }  }) OR ({ fhir:type { fhir:v ['decimal'] }  }) OR ({ fhir:type { fhir:v ['integer'] }  }) OR ({ fhir:type { fhir:v ['date'] }  }) OR ({ fhir:type { fhir:v ['dateTime'] }  }) OR ({ fhir:type { fhir:v ['time'] }  }) OR ({ fhir:type { fhir:v ['string'] }  }) OR ({ fhir:type { fhir:v ['quantity'] }  })) OR ( NOT { fhir:answerValueSet {fhir:v .} }  AND  NOT { fhir:answerOption {fhir:v .} } )

) AND (

# Constraint UniqueKey:que-4
# Human readable:A question cannot have both answerOption and answerValueSet

# Constraint: answerOption.empty() or answerValueSet.empty()
# ShEx:

 NOT { fhir:answerOption {fhir:v .} }  OR  NOT { fhir:answerValueSet {fhir:v .} } 

) AND (

# Constraint UniqueKey:que-3
# Human readable:Display items cannot have a "code" asserted

# Constraint: type!='display' or code.empty()
# ShEx:

({ fhir:type [fhir:v  . -'display']  }) OR  NOT { fhir:code {fhir:v .} } 

) AND (

# Constraint UniqueKey:que-1c
# Human readable:Display items cannot have child items

# Constraint: type='display' implies item.empty()
# ShEx:

({ fhir:type { fhir:v ['display'] }  }) AND  NOT { fhir:item {fhir:v .} } 

) AND (

# Constraint UniqueKey:que-1a
# Human readable:Group items must have nested items when Questionanire is complete

# Constraint: (type='group' and %resource.status='complete') implies item.empty().not()
# ShEx:

(({ fhir:type { fhir:v ['group'] }  }) AND 'false'.status { fhir:v ['complete'] } ) AND  NOT { fhir:item. NOT {  {fhir:v .} }  }

) AND (

# Constraint UniqueKey:que-1b
# Human readable:Groups should have items

# Constraint: type='group' implies item.empty().not()
# ShEx:

({ fhir:type { fhir:v ['group'] }  }) AND  NOT { fhir:item. NOT {  {fhir:v .} }  }

) AND (

# Constraint UniqueKey:que-10
# Human readable:Maximum length can only be declared for simple question types

# Constraint: (type in ('boolean' | 'decimal' | 'integer' | 'string' | 'text' | 'url')) or answerConstraint='optionOrString' or maxLength.empty()
# ShEx:

({ fhir:type { fhir:v ['boolean' 'decimal' 'integer' 'string' 'text' 'url'] }  }) OR ({ fhir:answerConstraint { fhir:v ['optionOrString'] }  }) OR  NOT { fhir:maxLength {fhir:v .} } 

) AND (


# This constraint does not have mapping to a ShEx construct yet.
# Unmapped construct found: count
# # Constraint UniqueKey:que-13
# Human readable:Can only have multiple initial values for repeating items
#
# Constraint: repeats=true or initial.count() <= 1
# ShEx:
#
#({ fhir:repeats { fhir:v [true] }  }) OR (   count  ( fhir:initial ) { fhir:v MaxInclusive 1 } )
{}

) AND (

# Constraint UniqueKey:que-14
# Human readable:Can only have answerConstraint if answerOption or answerValueset are present

# Constraint: answerConstraint.exists() implies answerOption.exists() or answerValueset.exists()
# ShEx:

{fhir:answerConstraint . AND ({fhir:answerOption . OR {fhir:answerValueset .}})}

) AND (

# Constraint UniqueKey:que-11
# Human readable:If one or more answerOption is present, initial cannot be present.  Use answerOption.initialSelected instead

# Constraint: answerOption.empty() or initial.empty()
# ShEx:

 NOT { fhir:answerOption {fhir:v .} }  OR  NOT { fhir:initial {fhir:v .} } 

) AND (


# This constraint does not have mapping to a ShEx construct yet.
# Unmapped construct found: count
# # Constraint UniqueKey:que-12
# Human readable:If there are more than one enableWhen, enableBehavior must be specified
#
# Constraint: enableWhen.count() > 1 implies enableBehavior.exists()
# ShEx:
#
#(   count  ( fhir:enableWhen ) { fhir:v MinExclusive 1 } ) AND {fhir:enableBehavior .}
{}

) AND (

# Constraint UniqueKey:que-7
# Human readable:If the operator is 'exists', the value must be a boolean

# Constraint: operator = 'exists' implies (answer is Boolean)
# ShEx:

({ fhir:operator { fhir:v ['exists'] }  }) AND ({ fhir:answer a { fhir:Boolean } })

)
 

# Permitted answer
<Questionnaire.item.answerOption> EXTENDS @<BackboneElement> CLOSED {   
    fhir:value (@<integer>  OR 
    			@<date>  OR 
    			@<time>  OR 
    			@<string>  OR 
    			@<Coding>  OR 
    			(@<Reference>  AND {fhir:link @<Resource> }) )  AND { rdf:type IRI } ;  # Answer value
    fhir:initialSelected @<boolean>?;       # Whether option is selected by 
                                            # default 
}  

# Questions and sections within the Questionnaire
<Questionnaire.item> EXTENDS @<BackboneElement> CLOSED {   
    fhir:linkId @<string>;                  # Unique id for item in questionnaire
    fhir:definition @<uri>?;                # ElementDefinition - details for 
                                            # the item 
    fhir:code @<OneOrMore_Coding>?;         # Corresponding concept for this 
                                            # item in a terminology 
    fhir:prefix @<string>?;                 # E.g. "1(a)", "2.5.3"
    fhir:text @<markdown>?;                 # Primary text for the item
    fhir:type @<code> AND
    	{fhir:value @fhirvs:item-type};  # group | display | boolean | 
                                            # decimal | integer | date | 
                                            # dateTime + 
    fhir:enableWhen @<OneOrMore_BackboneElement>?;  # Only allow data when
    fhir:enableBehavior @<code> AND
    	{fhir:value @fhirvs:questionnaire-enable-behavior}?;  # all | any
    fhir:disabledDisplay @<code> AND
    	{fhir:value @fhirvs:questionnaire-disabled-display}?;  # hidden | protected
    fhir:required @<boolean>?;              # Whether the item must be included 
                                            # in data results 
    fhir:repeats @<boolean>?;               # Whether the item may repeat
    fhir:readOnly @<boolean>?;              # Don't allow human editing
    fhir:maxLength @<integer>?;             # No more than this many characters
    fhir:answerConstraint @<code> AND
    	{fhir:value @fhirvs:questionnaire-answer-constraint}?;  # optionsOnly | optionsOrType | 
                                            # optionsOrString 
    fhir:answerValueSet @<canonical>?;      # Valueset containing permitted 
                                            # answers 
    fhir:answerOption @<OneOrMore_BackboneElement>?;  # Permitted answer
    fhir:initial @<OneOrMore_BackboneElement>?;  # Initial value(s) when item is 
                                            # first rendered 
    fhir:item @<OneOrMore_Questionnaire.item>?;  # Nested questionnaire items
} AND (

# Constraint UniqueKey:cnl-0
# Human readable:Name should be usable as an identifier for the module by machine processing applications such as code generation

# Constraint: name.exists() implies name.matches('[A-Z]([A-Za-z0-9_]){0,254}')
# ShEx:

{fhir:name . AND {fhir:name { fhir:v /'[A-Z]([A-Za-z0-9_]){0,254}'/ } }}

) AND (


# This constraint does not have mapping to a ShEx construct yet.
# Unmapped construct found: isDistinct
# Unmapped construct found: descendants
# # Constraint UniqueKey:que-2
# Human readable:The link ids for groups and questions must be unique within the questionnaire
#
# Constraint: descendants().linkId.isDistinct()
# ShEx:
#
#   isDistinct  (    descendants  (  ).linkId )
{}

) AND (

# Constraint UniqueKey:que-9
# Human readable:Read-only can't be specified for "display" items

# Constraint: type!='display' or readOnly.empty()
# ShEx:

({ fhir:type [fhir:v  . -'display']  }) OR  NOT { fhir:readOnly {fhir:v .} } 

) AND (

# Constraint UniqueKey:que-8
# Human readable:Initial values can't be specified for groups or display items

# Constraint: (type!='group' and type!='display') or initial.empty()
# ShEx:

(({ fhir:type [fhir:v  . -'group']  }) AND ({ fhir:type [fhir:v  . -'display']  })) OR  NOT { fhir:initial {fhir:v .} } 

) AND (

# Constraint UniqueKey:que-6
# Human readable:Required and repeat aren't permitted for display items

# Constraint: type!='display' or (required.empty() and repeats.empty())
# ShEx:

({ fhir:type [fhir:v  . -'display']  }) OR ( NOT { fhir:required {fhir:v .} }  AND  NOT { fhir:repeats {fhir:v .} } )

) AND (

# Constraint UniqueKey:que-5
# Human readable:Only coding, decimal, integer, date, dateTime, time, string or quantity  items can have answerOption or answerValueSet

# Constraint: (type='coding' or type = 'decimal' or type = 'integer' or type = 'date' or type = 'dateTime' or type = 'time' or type = 'string' or type = 'quantity') or (answerValueSet.empty() and answerOption.empty())
# ShEx:

(({ fhir:type { fhir:v ['coding'] }  }) OR ({ fhir:type { fhir:v ['decimal'] }  }) OR ({ fhir:type { fhir:v ['integer'] }  }) OR ({ fhir:type { fhir:v ['date'] }  }) OR ({ fhir:type { fhir:v ['dateTime'] }  }) OR ({ fhir:type { fhir:v ['time'] }  }) OR ({ fhir:type { fhir:v ['string'] }  }) OR ({ fhir:type { fhir:v ['quantity'] }  })) OR ( NOT { fhir:answerValueSet {fhir:v .} }  AND  NOT { fhir:answerOption {fhir:v .} } )

) AND (

# Constraint UniqueKey:que-4
# Human readable:A question cannot have both answerOption and answerValueSet

# Constraint: answerOption.empty() or answerValueSet.empty()
# ShEx:

 NOT { fhir:answerOption {fhir:v .} }  OR  NOT { fhir:answerValueSet {fhir:v .} } 

) AND (

# Constraint UniqueKey:que-3
# Human readable:Display items cannot have a "code" asserted

# Constraint: type!='display' or code.empty()
# ShEx:

({ fhir:type [fhir:v  . -'display']  }) OR  NOT { fhir:code {fhir:v .} } 

) AND (

# Constraint UniqueKey:que-1c
# Human readable:Display items cannot have child items

# Constraint: type='display' implies item.empty()
# ShEx:

({ fhir:type { fhir:v ['display'] }  }) AND  NOT { fhir:item {fhir:v .} } 

) AND (

# Constraint UniqueKey:que-1a
# Human readable:Group items must have nested items when Questionanire is complete

# Constraint: (type='group' and %resource.status='complete') implies item.empty().not()
# ShEx:

(({ fhir:type { fhir:v ['group'] }  }) AND 'false'.status { fhir:v ['complete'] } ) AND  NOT { fhir:item. NOT {  {fhir:v .} }  }

) AND (

# Constraint UniqueKey:que-1b
# Human readable:Groups should have items

# Constraint: type='group' implies item.empty().not()
# ShEx:

({ fhir:type { fhir:v ['group'] }  }) AND  NOT { fhir:item. NOT {  {fhir:v .} }  }

) AND (

# Constraint UniqueKey:que-10
# Human readable:Maximum length can only be declared for simple question types

# Constraint: (type in ('boolean' | 'decimal' | 'integer' | 'string' | 'text' | 'url')) or answerConstraint='optionOrString' or maxLength.empty()
# ShEx:

({ fhir:type { fhir:v ['boolean' 'decimal' 'integer' 'string' 'text' 'url'] }  }) OR ({ fhir:answerConstraint { fhir:v ['optionOrString'] }  }) OR  NOT { fhir:maxLength {fhir:v .} } 

) AND (


# This constraint does not have mapping to a ShEx construct yet.
# Unmapped construct found: count
# # Constraint UniqueKey:que-13
# Human readable:Can only have multiple initial values for repeating items
#
# Constraint: repeats=true or initial.count() <= 1
# ShEx:
#
#({ fhir:repeats { fhir:v [true] }  }) OR (   count  ( fhir:initial ) { fhir:v MaxInclusive 1 } )
{}

) AND (

# Constraint UniqueKey:que-14
# Human readable:Can only have answerConstraint if answerOption or answerValueset are present

# Constraint: answerConstraint.exists() implies answerOption.exists() or answerValueset.exists()
# ShEx:

{fhir:answerConstraint . AND ({fhir:answerOption . OR {fhir:answerValueset .}})}

) AND (

# Constraint UniqueKey:que-11
# Human readable:If one or more answerOption is present, initial cannot be present.  Use answerOption.initialSelected instead

# Constraint: answerOption.empty() or initial.empty()
# ShEx:

 NOT { fhir:answerOption {fhir:v .} }  OR  NOT { fhir:initial {fhir:v .} } 

) AND (


# This constraint does not have mapping to a ShEx construct yet.
# Unmapped construct found: count
# # Constraint UniqueKey:que-12
# Human readable:If there are more than one enableWhen, enableBehavior must be specified
#
# Constraint: enableWhen.count() > 1 implies enableBehavior.exists()
# ShEx:
#
#(   count  ( fhir:enableWhen ) { fhir:v MinExclusive 1 } ) AND {fhir:enableBehavior .}
{}

) AND (

# Constraint UniqueKey:que-7
# Human readable:If the operator is 'exists', the value must be a boolean

# Constraint: operator = 'exists' implies (answer is Boolean)
# ShEx:

({ fhir:operator { fhir:v ['exists'] }  }) AND ({ fhir:answer a { fhir:Boolean } })

)
 

# Initial value(s) when item is first rendered
<Questionnaire.item.initial> EXTENDS @<BackboneElement> CLOSED {   
    fhir:value (@<boolean>  OR 
    			@<decimal>  OR 
    			@<integer>  OR 
    			@<date>  OR 
    			@<dateTime>  OR 
    			@<time>  OR 
    			@<string>  OR 
    			@<uri>  OR 
    			@<Attachment>  OR 
    			@<Coding>  OR 
    			@<Quantity>  OR 
    			(@<Reference>  AND {fhir:link @<Resource> }) )  AND { rdf:type IRI } ;  # Actual value for initializing the 
                                            # question 
}  

# Only allow data when
<Questionnaire.item.enableWhen> EXTENDS @<BackboneElement> CLOSED {   
    fhir:question @<string>;                # The linkId of question that 
                                            # determines whether item is 
                                            # enabled/disabled 
    fhir:operator @<code> AND
    	{fhir:value @fhirvs:questionnaire-enable-operator};  # exists | = | != | > | < | >= | <=
    fhir:answer (@<boolean>  OR 
    			@<decimal>  OR 
    			@<integer>  OR 
    			@<date>  OR 
    			@<dateTime>  OR 
    			@<time>  OR 
    			@<string>  OR 
    			@<Coding>  OR 
    			@<Quantity>  OR 
    			(@<Reference>  AND {fhir:link @<Resource> }) )  AND { rdf:type IRI } ;  # Value for question comparison 
                                            # based on operator 
}  

# Nested questionnaire items
<Questionnaire.item.item> CLOSED {   
}  

#---------------------- Cardinality Types (OneOrMore) -------------------

<OneOrMore_Identifier> CLOSED {
    rdf:first @<Identifier>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Identifier> 
}

<OneOrMore_canonical> CLOSED {
    rdf:first @<canonical>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_canonical> 
}

<OneOrMore_code> CLOSED {
    rdf:first @<code>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_code> 
}

<OneOrMore_ContactDetail> CLOSED {
    rdf:first @<ContactDetail>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_ContactDetail> 
}

<OneOrMore_UsageContext> CLOSED {
    rdf:first @<UsageContext>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_UsageContext> 
}

<OneOrMore_CodeableConcept> CLOSED {
    rdf:first @<CodeableConcept>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_CodeableConcept> 
}

<OneOrMore_Coding> CLOSED {
    rdf:first @<Coding>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Coding> 
}

<OneOrMore_BackboneElement> CLOSED {
    rdf:first @<BackboneElement>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_BackboneElement> 
}

<OneOrMore_Questionnaire.item> CLOSED {
    rdf:first @<Questionnaire.item>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Questionnaire.item> 
}

#---------------------- Value Sets ------------------------

# Controls how multiple enableWhen values are interpreted -  whether all or any must be true.
fhirvs:questionnaire-enable-behavior ["all" "any"]

# Distinguishes groups from questions and display text and indicates data type for questions.
fhirvs:item-type ["group" "display" "question" "boolean" "decimal" "integer" "date" "dateTime" "time" "string" "text" "url" "coding" "attachment" "reference" "quantity"]

# The criteria by which a question is enabled.
fhirvs:questionnaire-enable-operator ["exists" "=" "!=" ">" "<" ">=" "<="]

# The lifecycle status of an artifact.
fhirvs:publication-status ["draft" "active" "retired" "unknown"]

# One of the resource types defined as part of this version of FHIR.
fhirvs:resource-types ["Resource" "Binary" "Bundle" "DomainResource" "Account" "AdministrableProductDefinition" "AdverseEvent" "AllergyIntolerance" "Appointment" "AppointmentResponse" "ArtifactAssessment" "AuditEvent" "Basic" "BiologicallyDerivedProduct" "BodyStructure" "CanonicalResource" "CapabilityStatement" "CapabilityStatement2" "CodeSystem" "CompartmentDefinition" "ExampleScenario" "GraphDefinition" "ImplementationGuide" "MessageDefinition" "MetadataResource" "ActivityDefinition" "ChargeItemDefinition" "Citation" "ConceptMap" "ConditionDefinition" "EventDefinition" "Evidence" "EvidenceReport" "EvidenceVariable" "Library" "Measure" "NamingSystem" "PlanDefinition" "Questionnaire" "OperationDefinition" "SearchParameter" "StructureDefinition" "StructureMap" "SubscriptionTopic" "TerminologyCapabilities" "TestScript" "ValueSet" "CarePlan" "CareTeam" "ChargeItem" "Claim" "ClaimResponse" "ClinicalImpression" "ClinicalUseDefinition" "Communication" "CommunicationRequest" "Composition" "Condition" "Consent" "Contract" "Coverage" "CoverageEligibilityRequest" "CoverageEligibilityResponse" "DetectedIssue" "Device" "DeviceDefinition" "DeviceDispense" "DeviceMetric" "DeviceRequest" "DeviceUsage" "DiagnosticReport" "DocumentManifest" "DocumentReference" "Encounter" "Endpoint" "EnrollmentRequest" "EnrollmentResponse" "EpisodeOfCare" "ExplanationOfBenefit" "FamilyMemberHistory" "Flag" "FormularyItem" "Goal" "Group" "GuidanceResponse" "HealthcareService" "ImagingSelection" "ImagingStudy" "Immunization" "ImmunizationEvaluation" "ImmunizationRecommendation" "Ingredient" "InsurancePlan" "InventoryReport" "Invoice" "Linkage" "List" "Location" "ManufacturedItemDefinition" "MeasureReport" "Medication" "MedicationAdministration" "MedicationDispense" "MedicationKnowledge" "MedicationRequest" "MedicationUsage" "MedicinalProductDefinition" "MessageHeader" "MolecularSequence" "NutritionIntake" "NutritionOrder" "NutritionProduct" "Observation" "ObservationDefinition" "OperationOutcome" "Organization" "OrganizationAffiliation" "PackagedProductDefinition" "Patient" "PaymentNotice" "PaymentReconciliation" "Permission" "Person" "Practitioner" "PractitionerRole" "Procedure" "Provenance" "QuestionnaireResponse" "RegulatedAuthorization" "RelatedPerson" "RequestGroup" "ResearchStudy" "ResearchSubject" "RiskAssessment" "Schedule" "ServiceRequest" "Slot" "Specimen" "SpecimenDefinition" "Subscription" "SubscriptionStatus" "Substance" "SubstanceDefinition" "SubstanceNucleicAcid" "SubstancePolymer" "SubstanceProtein" "SubstanceReferenceInformation" "SubstanceSourceMaterial" "SupplyDelivery" "SupplyRequest" "Task" "TestReport" "Transport" "VerificationResult" "VisionPrescription" "Parameters"]

# Codes that guide the display of disabled questionnaire items
fhirvs:questionnaire-disabled-display ["hidden" "protected"]

# Codes that describe the types of constraints possible on a question item that has a list of permitted answers
fhirvs:questionnaire-answer-constraint ["optionsOnly" "optionsOrType" "optionsOrString"]
